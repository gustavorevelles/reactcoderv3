{"ast":null,"code":"const products = [{\n  id: 1,\n  name: 'Esquís Faction 080',\n  stock: 3,\n  price: '300',\n  category: 'esquis',\n  description: 'Lorem ipsum dolor consecuter',\n  img: './images/img-p-1.jpg'\n}, {\n  id: 2,\n  name: 'Botas Salomón',\n  stock: 10,\n  price: '230',\n  category: 'botas',\n  description: 'Lorem ipsum dolor consecuter',\n  img: './images/img-p-4.jpg'\n}, {\n  id: 3,\n  name: 'Tabla Snowboard Fill',\n  stock: 3,\n  price: '600',\n  category: 'tablas',\n  description: 'Lorem ipsum dolor consecuter',\n  img: './images/img-p-3.jpg'\n}];\nconst categories = [{\n  id: 'esquis',\n  description: 'Esquís'\n}, {\n  id: 'botas',\n  description: 'Botas'\n}, {\n  id: 'tablas',\n  description: 'Tablas'\n}];\nexport const getProducts = idCategory => {\n  return new Promise(resolve => {\n    const productsToResolve = idCategory ? products.filter(item => item.category === idCategory) : products;\n    setTimeout(() => {\n      resolve(productsToResolve);\n    }, 2000);\n  });\n};\nexport const getProduct = id => {\n  return new Promise(resolve => {\n    const prod = products.find(p => p.id === parseInt(id));\n    setTimeout(() => {\n      resolve(prod);\n    }, 1000);\n  });\n};\nexport const getCategories = () => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(categories);\n    }, 1000);\n  });\n};","map":{"version":3,"sources":["/Users/gustavorevelles/Documents/Proyectos en proceso/Curso React/xplorapp/appcurso/src/asyncmock.js"],"names":["products","id","name","stock","price","category","description","img","categories","getProducts","idCategory","Promise","resolve","productsToResolve","filter","item","setTimeout","getProduct","prod","find","p","parseInt","getCategories"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,CACb;AACIC,EAAAA,EAAE,EAAC,CADP;AAEIC,EAAAA,IAAI,EAAC,oBAFT;AAGIC,EAAAA,KAAK,EAAC,CAHV;AAIIC,EAAAA,KAAK,EAAC,KAJV;AAKIC,EAAAA,QAAQ,EAAC,QALb;AAMIC,EAAAA,WAAW,EAAE,8BANjB;AAOIC,EAAAA,GAAG,EAAC;AAPR,CADa,EAUb;AACIN,EAAAA,EAAE,EAAC,CADP;AAEIC,EAAAA,IAAI,EAAC,eAFT;AAGIC,EAAAA,KAAK,EAAC,EAHV;AAIIC,EAAAA,KAAK,EAAC,KAJV;AAKIC,EAAAA,QAAQ,EAAC,OALb;AAMIC,EAAAA,WAAW,EAAE,8BANjB;AAOIC,EAAAA,GAAG,EAAC;AAPR,CAVa,EAmBb;AACIN,EAAAA,EAAE,EAAC,CADP;AAEIC,EAAAA,IAAI,EAAC,sBAFT;AAGIC,EAAAA,KAAK,EAAC,CAHV;AAIIC,EAAAA,KAAK,EAAC,KAJV;AAKIC,EAAAA,QAAQ,EAAC,QALb;AAMIC,EAAAA,WAAW,EAAE,8BANjB;AAOIC,EAAAA,GAAG,EAAC;AAPR,CAnBa,CAAjB;AA8BA,MAAMC,UAAU,GAAG,CACf;AAACP,EAAAA,EAAE,EAAE,QAAL;AAAeK,EAAAA,WAAW,EAAE;AAA5B,CADe,EAEf;AAACL,EAAAA,EAAE,EAAE,OAAL;AAAcK,EAAAA,WAAW,EAAE;AAA3B,CAFe,EAGf;AAACL,EAAAA,EAAE,EAAE,QAAL;AAAeK,EAAAA,WAAW,EAAE;AAA5B,CAHe,CAAnB;AAMA,OAAO,MAAMG,WAAW,GAAIC,UAAD,IAAgB;AACvC,SAAO,IAAIC,OAAJ,CAAcC,OAAD,IAAa;AAC7B,UAAMC,iBAAiB,GAAGH,UAAU,GAAGV,QAAQ,CAACc,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACV,QAAL,KAAkBK,UAA1C,CAAH,GAA2DV,QAA/F;AACAgB,IAAAA,UAAU,CAAC,MAAM;AACbJ,MAAAA,OAAO,CAACC,iBAAD,CAAP;AACH,KAFS,EAER,IAFQ,CAAV;AAGH,GALM,CAAP;AAMH,CAPM;AASP,OAAO,MAAMI,UAAU,GAAIhB,EAAD,IAAQ;AAC9B,SAAO,IAAIU,OAAJ,CAAaC,OAAD,IAAa;AAC5B,UAAMM,IAAI,GAAGlB,QAAQ,CAACmB,IAAT,CAAcC,CAAC,IAAIA,CAAC,CAACnB,EAAF,KAASoB,QAAQ,CAACpB,EAAD,CAApC,CAAb;AACAe,IAAAA,UAAU,CAAC,MAAM;AACbJ,MAAAA,OAAO,CAACM,IAAD,CAAP;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GALM,CAAP;AAMH,CAPM;AASP,OAAO,MAAMI,aAAa,GAAG,MAAM;AAC/B,SAAO,IAAIX,OAAJ,CAAaC,OAAD,IAAa;AAC5BI,IAAAA,UAAU,CAAC,MAAM;AACbJ,MAAAA,OAAO,CAACJ,UAAD,CAAP;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJM,CAAP;AAKH,CANM","sourcesContent":["const products = [\n    {\n        id:1, \n        name:'Esquís Faction 080',\n        stock:3, \n        price:'300',\n        category:'esquis',\n        description: 'Lorem ipsum dolor consecuter',\n        img:'./images/img-p-1.jpg'\n    },\n    {\n        id:2, \n        name:'Botas Salomón',\n        stock:10, \n        price:'230',\n        category:'botas',\n        description: 'Lorem ipsum dolor consecuter',\n        img:'./images/img-p-4.jpg'\n    },\n    {\n        id:3, \n        name:'Tabla Snowboard Fill',\n        stock:3, \n        price:'600',\n        category:'tablas',\n        description: 'Lorem ipsum dolor consecuter',\n        img:'./images/img-p-3.jpg'\n    }\n]\n\nconst categories = [\n    {id: 'esquis', description: 'Esquís'},\n    {id: 'botas', description: 'Botas'},\n    {id: 'tablas', description: 'Tablas'}\n]\n\nexport const getProducts = (idCategory) => {\n    return new Promise ((resolve) => {\n        const productsToResolve = idCategory ? products.filter(item => item.category === idCategory) : products\n        setTimeout(() => {\n            resolve(productsToResolve);\n        },2000);\n    });\n}\n\nexport const getProduct = (id) => {\n    return new Promise((resolve) => {\n        const prod = products.find(p => p.id === parseInt(id))\n        setTimeout(() => {\n            resolve(prod)\n        }, 1000)\n    })\n}\n\nexport const getCategories = () => {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve(categories)\n        }, 1000)\n    })\n}"]},"metadata":{},"sourceType":"module"}