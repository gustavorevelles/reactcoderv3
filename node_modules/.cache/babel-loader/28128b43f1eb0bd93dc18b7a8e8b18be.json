{"ast":null,"code":"var _jsxFileName = \"/Users/gustavorevelles/Documents/Proyectos en proceso/Curso React/xplorapp/reactcoderv2/src/components/ItemListContainer/ItemListContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './ItemListContainer.css';\nimport ItemList from '../ItemList/ItemList';\nimport { getProducts } from '../../asyncmock';\nimport { useParams } from 'react-router-dom';\nimport { getDocs, collection, QuerySnapshot } from 'firebase/firestore';\nimport { firestoreDb } from '../../services/firebase/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemListContainer = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    categoryId\n  } = useParams();\n  useEffect(() => {\n    setLoading(true);\n    const productsCollectionRef = collection(firestoreDb, 'products');\n    getDocs(productsCollectionRef).then(response => {\n      const products = response.docs.map(doc => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        };\n      });\n    });\n    console.log(products);\n    setProducts(products);\n    return () => {\n      setProducts();\n    };\n  }, [categoryId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ItemListContainer\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this) : products.length ? /*#__PURE__*/_jsxDEV(ItemList, {\n      products: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"No se encontraron productos!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ItemListContainer, \"IeKd/gN9FMrai/ZSHG7LZBXFV+w=\", false, function () {\n  return [useParams];\n});\n\n_c = ItemListContainer;\nexport default ItemListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemListContainer\");","map":{"version":3,"sources":["/Users/gustavorevelles/Documents/Proyectos en proceso/Curso React/xplorapp/reactcoderv2/src/components/ItemListContainer/ItemListContainer.js"],"names":["useEffect","useState","ItemList","getProducts","useParams","getDocs","collection","QuerySnapshot","firestoreDb","ItemListContainer","products","setProducts","loading","setLoading","categoryId","productsCollectionRef","then","response","docs","map","doc","id","data","console","log","length"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,yBAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,aAA9B,QAAmD,oBAAnD;AACA,SAASC,WAAT,QAA4B,kCAA5B;;;AAKA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAiBV,SAAS,EAAhC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAOE,qBAAqB,GAAGT,UAAU,CAAEE,WAAF,EAAe,UAAf,CAAzC;AAEAH,IAAAA,OAAO,CAAEU,qBAAF,CAAP,CAAgCC,IAAhC,CAAqCC,QAAQ,IAAI;AAC7C,YAAMP,QAAQ,GAAGO,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,GAAG,IAAI;AACvC,eAAO;AAACC,UAAAA,EAAE,EAAED,GAAG,CAACC,EAAT;AAAa,aAAGD,GAAG,CAACE,IAAJ;AAAhB,SAAP;AACH,OAFgB,CAAjB;AAGH,KAJD;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYd,QAAZ;AACAC,IAAAA,WAAW,CAACD,QAAD,CAAX;AAGA,WAAQ,MAAM;AACVC,MAAAA,WAAW;AACd,KAFD;AAGH,GAjBQ,EAiBN,CAACG,UAAD,CAjBM,CAAT;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,cAEQF,OAAO,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,GAEPF,QAAQ,CAACe,MAAT,gBACI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEf;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,gBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CApCD;;GAAMD,iB;UAGqBL,S;;;KAHrBK,iB;AAsCN,eAAeA,iBAAf","sourcesContent":["import { useEffect, useState } from 'react'\nimport './ItemListContainer.css'\nimport ItemList from '../ItemList/ItemList'\nimport { getProducts } from '../../asyncmock'\nimport { useParams } from 'react-router-dom'\nimport { getDocs, collection, QuerySnapshot } from 'firebase/firestore'\nimport { firestoreDb } from '../../services/firebase/firebase'\n\n\n\n\nconst ItemListContainer = () => {\n    const [products, setProducts] = useState([])\n    const [loading, setLoading] = useState(true)\n    const { categoryId } = useParams()\n     \n    useEffect(() => {\n        setLoading(true)\n\n        const  productsCollectionRef = collection (firestoreDb, 'products')\n\n        getDocs (productsCollectionRef).then(response => {\n            const products = response.docs.map (doc => {\n                return {id: doc.id, ...doc.data()}\n            })\n        })\n        console.log(products)\n        setProducts(products)\n\n\n        return (() => {\n            setProducts()\n        })          \n    }, [categoryId])\n    \n    return (\n        <div className=\"ItemListContainer\">\n            {\n                loading ? \n                    <h1>Cargando...</h1> :  \n                products.length ? \n                    <ItemList products={products}/> : \n                    <h1>No se encontraron productos!</h1>\n            }\n        </div>\n    )    \n    \n}\n\nexport default ItemListContainer"]},"metadata":{},"sourceType":"module"}